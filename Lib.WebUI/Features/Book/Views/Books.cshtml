@model BookAuthenticationViewModel
<div class="row justify-content-end lib-mb-5 lib-mt-5 lib-mb-5 row lib-p-3">
    <input class="lib-search-textbox lib-w-45 lib-content-medium-m" placeholder="Search..." id="SearchValue" />
    <button class="btn lib-button-header-light lib-w-10" style=" position: relative; right: 45px; bottom: 2px; " onclick="book.searchBooks()" id="BooksearchButton">
        <img src="~/img/Other/lib-search.svg" />
    </button>
</div>
@foreach (var book in Model.BookDetails)
{
    <div class="lib-mb-5 lib-mt-5 lib-white-card w-100 lib-mb-5">
        <div class="row lib-p-3">
            <div class="col lib-ml-7">
                <div class="row lib-mt-5">
                    <span class="lib-content-medium-xl">@book.AuthorFirstName @book.AuthorLastName</span>
                </div>
                <div class="row">
                    <span class="lib-content-medium-l">@book.Title</span>
                </div>
            </div>
            @if (book.IsReserved)
            {
                <div class="col-auto">
                    <div class="row justify-content-end ">
                        <div class="lib-p-2">
                            <span class="lib-reserved-card lib-content-semibold-s lib-w-40">ZAREZERWOWANA</span>
                        </div>
                    </div>
                    <div class="row justify-content-end">
                        <div class="text-center lib-p-2">
                            <a class="btn lib-simple-btn lib-content-semibold-m lib-w-40" href='@Url.Action(nameof(BookController.BookDetails), "Book", new { id = book.BookId })'>Opis</a>
                        </div>
                        @if (Model.IsAuthenticated)
                        {
                            <div class="text-center lib-p-2">
                                <button class="btn lib-simple-btn lib-content-semibold-m lib-w-30" onclick="book.changeStateReservation(@book.BookId)">Wypożycz</button>
                            </div>
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="col-auto">
                    <div class="row justify-content-end">
                        <div class="lib-p-2">
                            @if (book.IsAvailable)
                            {
                                <span class="lib-enabled-card lib-content-semibold-s lib-w-30">DOSTĘPNY</span>
                            }
                            else
                            {
                                <span class="lib-disabled-card lib-content-semibold-s lib-w-30">NEDOSTĘPNY</span>
                            }
                        </div>
                    </div>
                    <div class="row justify-content-end">
                        <div class="row text-center lib-p-2">
                            <a class="btn lib-simple-btn lib-content-semibold-m lib-w-30" href='@Url.Action(nameof(BookController.BookDetails), "Book", new { id = book.BookId })'>Opis</a>
                        </div>
                        @if (book.IsAvailable)
                        {
                            <div class="row text-center lib-p-2 lib-ml-4">
                                <button class="btn lib-simple-btn lib-content-semibold-m lib-w-30" onclick="book.bookReservation(@book.BookId)">Rezerwuj</button>
                            </div>
                        }
                        <div class="text-center lib-p-2 lib-ml-4">
                            @if (book.IsAvailable && Model.IsAuthenticated)
                            {
                                <a class="btn lib-simple-btn lib-content-semibold-m lib-w-30" href='@Url.Action(nameof(BookController.MakeReservation), "Book", new { id = book.BookId })'>Wypożycz</a>
                            }
                            else if (Model.IsAuthenticated)
                            {
                                <button class="btn lib-simple-btn lib-content-semibold-m lib-w-30" onclick="book.returnBook(@book.BookId)">Zwróć</button>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

@section BundleScripts {
    @await Html.PartialAsync(AppSettingsOptionsAccessor.Value.VersionedScriptPartialView, "book")
}
<script>
    const searchBookUrl = '@Url.Action(nameof(BookController.Search), "Book")';
    const searchResultUrl = '@Url.Action(nameof(BookController.SearchBook), "Book", new { data = "DATA" })';
    const reservationUrl = '@Url.Action(nameof(BookController.BookReserved), "Book")';
    const returnUrl = '@Url.Action(nameof(BookController.Index), "Book")';
    const returnBookUrl = '@Url.Action(nameof(BookController.ReturnBook), "Book")';
    const changeStateReservationUrl = '@Url.Action(nameof(BookController.ChangeStateReservation), "Book")';
</script>


<script>
    @*function searchBooks() {
        var currentValue = $("#SearchValue").val();

        var model = {
            data: currentValue
        }

        httpClient
            .get({
                url: '@Url.Action(nameof(BookController.Search), "Book")',
                data: model
            })
            .then(
                (result) => {
                    window.location.href = '@Url.Action(nameof(BookController.SearchBook), "Book", new { data = "DATA" })'.replace("DATA", result);
                }
            )

    }
    function bookReservation(id) {
        var model = {
            UserId: 0,
            BookId: id
        }

        httpClient
            .post({
                url: '@Url.Action(nameof(BookController.BookReserved), "Book")',
                data: model
            })
            .then(
                () => {
                    window.location.href = '@Url.Action(nameof(BookController.Index), "Book")';
                }
            )
    }

    function returnBook(id) {
        var model = {
            BookId: id
        }

        httpClient
            .post({
                url: '@Url.Action(nameof(BookController.ReturnBook), "Book")',
                data: model
            })
            .then(
                () => {
                    window.location.href = '@Url.Action(nameof(BookController.Index), "Book")';
                }
            )
    }

    function changeStateReservation(id) {
        var model = {
            UserId: 2,
            BookId: id
        }

        httpClient
            .post({
                url: '@Url.Action(nameof(BookController.ChangeStateReservation), "Book")',
                data: model
            })
            .then(
                () => {
                    window.location.href = '@Url.Action(nameof(BookController.Index), "Book")';
                }
            )
    }*@

    @*function borrowBook(id) {
        var model = {
            UserId: 2,
            BookId: id
        }

        httpClient
            .post({
                url: '@Url.Action(nameof(BookController.BorrowBook), "Book")',
                data: model
            })
            .then(
                () => {
                    window.location.href = '@Url.Action(nameof(BookController.Index), "Book")';
                }
            )
    }*@
</script>